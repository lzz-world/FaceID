<Window x:Class="Face.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Face.WPF"
        xmlns:conv ="clr-namespace:ValueConverters;assembly=ValueConverters"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:wfi ="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        xmlns:view ="clr-namespace:Face.WPF.Views"
        xmlns:vm ="clr-namespace:Face.WPF.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:drawing="clr-namespace:System.Drawing;assembly=netstandard"
        mc:Ignorable="d"
        Topmost="True"
        Closed="Window_Closed"
        Background="{StaticResource BackgroupDefualt}"
        Title="MainWindow" Width="1000">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="GroupBox" BasedOn="{StaticResource GroupBoxTab.Small}"/>

        <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimary}"/>
        <Style TargetType="Button" x:Key="SerialButtonStyle" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Content" Value="打 开" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="40 5 40 0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=(vm:MainViewModel.IsConnect)}" Value="True">
                    <Setter Property="Content" Value="关 闭" />
                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="10 1 0 1"/>
        </Style>

        <conv:InverseBoolConverter x:Key="inverseBool"/>
    </Window.Resources>
    <Grid ShowGridLines="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="490"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <wfi:WindowsFormsHost Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <wf:PictureBox x:Name="videoBox"/>
        </wfi:WindowsFormsHost>
        <StackPanel Grid.Column="0">
            <GroupBox Header="相机号" Height="175">
                <ListBox ItemsSource="{Binding VideoList}" SelectedIndex="{Binding VideoIndex}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction  Command="{Binding SwitchVideoCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </GroupBox>
            <GroupBox Header="相机旋转" Margin="0 5 0 0" Height="310">
                <ListBox SelectedIndex="{Binding ImageRotateFlipIndex}">
                    <ListBoxItem>无旋转无翻转</ListBoxItem>
                    <ListBoxItem>旋转90°无翻转</ListBoxItem>
                    <ListBoxItem>旋转180°无翻转</ListBoxItem>
                    <ListBoxItem>旋转270°无翻转</ListBoxItem>
                    <ListBoxItem>无旋转翻转X</ListBoxItem>
                    <ListBoxItem>旋转90°翻转X</ListBoxItem>
                    <ListBoxItem>旋转180°翻转X</ListBoxItem>
                    <ListBoxItem>旋转270°翻转X</ListBoxItem>
                </ListBox>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="2" >
            <GroupBox Header="串口设置" Margin="0 0 0 0">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="串口号"/>
                        <TextBlock Grid.Row="1" Text="波特率"/>
                        <TextBlock Grid.Row="2" Text="校验位"/>
                        <TextBlock Grid.Row="3" Text="数据位"/>
                        <TextBlock Grid.Row="4" Text="停止位"/>
                        <TextBlock Grid.Row="5" Text="流控制"/>
                        <ComboBox x:Name="serialPort" Grid.Row="0" Grid.Column="1" SelectedValue="{Binding SerialName}"/>
                        <ComboBox x:Name="baudRate"   Grid.Row="1" Grid.Column="1" SelectedValue="{Binding BaudRate}"/>
                        <ComboBox x:Name="parity"     Grid.Row="2" Grid.Column="1" SelectedValue="{Binding Parity}"/>
                        <ComboBox x:Name="dataBits"   Grid.Row="3" Grid.Column="1" SelectedValue="{Binding DataBits}"/>
                        <ComboBox x:Name="stopBits"   Grid.Row="4" Grid.Column="1" SelectedValue="{Binding StopBits}"/>
                        <ComboBox x:Name="handshake"  Grid.Row="5" Grid.Column="1" SelectedValue="{Binding Handshake}"/>
                    </Grid>
                    <Button 
                        Command="{Binding SerialPortConnectCommand}"
                        Style="{StaticResource SerialButtonStyle}" 
                        Tag="{Binding IsConnect}"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <GroupBox x:Name="serialOpen" Grid.Column="3" Header="MID" IsEnabled="{Binding Path=(vm:MainViewModel.IsConnect)}">
            <ScrollViewer>
                <StackPanel>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[0]}" GroupName="MID">0x10 停止当前处理</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[1]}" GroupName="MID">0x11 获取当前状态</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[2]}" GroupName="MID">0x12 鉴权解锁</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[3]}" GroupName="MID">0x13 交互录入</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[4]}" GroupName="MID">0x16 抓拍本地存储</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[5]}" GroupName="MID">0x17 上传图片大小</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[6]}" GroupName="MID">0x18 图上传至主控</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[7]}" GroupName="MID">0x1D 单帧录入</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[8]}" GroupName="MID">0x20 删除某个用户</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[9]}" GroupName="MID">0x21 删除所有用户</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[10]}" GroupName="MID">0x22 某个用户信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[11]}" GroupName="MID">0x23 重置算法状态</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[12]}" GroupName="MID">0x24 所有用户信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[13]}" GroupName="MID">0x26 扩展录入方式</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[14]}" GroupName="MID">0x30 获取版本信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[15]}" GroupName="MID">0x40 进入OTA模式</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[16]}" GroupName="MID">0x41 退出OTA模式</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[17]}" GroupName="MID">0x42 获取OTA状态</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[18]}" GroupName="MID">0x43 发送升级包A</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[19]}" GroupName="MID">0x44 发送升级包B</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[20]}" GroupName="MID">0x50 设解密随机数</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[21]}" GroupName="MID">0x51 OTA设波特率</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[22]}" GroupName="MID">0x52 设定密钥序列</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[23]}" GroupName="MID">0x53 设定调试密钥</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[24]}" GroupName="MID">0x60 日志存至内存</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[25]}" GroupName="MID">0x61 日志传至主控</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[26]}" GroupName="MID">0xD4 算法安全等级</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[27]}" GroupName="MID">0xED 模组准备关机</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[28]}" GroupName="MID">0xF0 调试模式</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[29]}" GroupName="MID">0xF1 调试模式信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[30]}" GroupName="MID">0xF2 上传调试信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[31]}" GroupName="MID">0xF3 当前解锁信息</RadioButton>
                    <RadioButton Command="{Binding SwitchMidCommand}" IsChecked="{Binding BtnRadioIsCheck[32]}" GroupName="MID">0xFE 进入演示模式</RadioButton>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
        <DockPanel Grid.Row="1" Grid.Column="4" Height="200" IsEnabled="{Binding Path=(vm:MainViewModel.IsConnect)}">
            <TabControl DockPanel.Dock="Top" 
                        TabStripPlacement="Bottom" 
                        Style="{x:Null}" 
                        BorderBrush="Transparent" 
                        Background="{StaticResource BackgroupDefualt}"
                        SelectedIndex="{Binding TabIndex}">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="TextBlock">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0 5 10 5"/>
                    </Style>
                </TabControl.Resources>
                <TabItem></TabItem>
                <TabItem>
                    <Grid Margin="0 0 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="解锁成功断电"/>
                        <TextBlock Grid.Row="1" Text="解锁超时(s)"/>
                        <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding MsgVerifyData[0]}">
                            <ComboBoxItem Content="NO"/>
                            <ComboBoxItem Content="YES"/>
                        </ComboBox>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding MsgVerifyData[1]}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <Grid Margin="0 0 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="管理员"/>
                        <TextBlock Grid.Row="1" Text="姓名"/>
                        <TextBlock Grid.Row="2" Text="面部方向"/>
                        <TextBlock Grid.Row="3" Text="超时时间(s)"/>
                        <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding MsgEnrollData_Admin}" Margin="10 5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding MsgEnrollData_Name}"/>
                        <ComboBox Grid.Row="2" Grid.Column="1"
                                  SelectedIndex="{Binding MsgEnrollData_Face}" 
                                  IsEnabled="{Binding FaceDirIsEnble}">
                            <ComboBoxItem>未定义</ComboBoxItem>
                            <ComboBoxItem>面中部</ComboBoxItem>
                            <ComboBoxItem>面朝右</ComboBoxItem>
                            <ComboBoxItem>面朝左</ComboBoxItem>
                            <ComboBoxItem>面朝下</ComboBoxItem>
                            <ComboBoxItem>面朝上</ComboBoxItem>
                        </ComboBox>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding MsgEnrollData_Time}"/>
                    </Grid>
                </TabItem>
                <TabItem>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="图片数量" />
                            <TextBlock Grid.Row="1" Text="图片起始号(1-50)"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ImageDataCapture[0]}"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ImageDataCapture[1]}"/>
                        </Grid>
                        <Label Content="无效果，请使用0x4D" Foreground="Red"/>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="上传图片编号"/>
                            <TextBox Width="60" Text="{Binding SaveImageNo}"/>
                        </StackPanel>
                        <Label Content="无效果，请使用0X4D" Foreground="Red"/>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <Label Content="无效果，请使用0x4D" Foreground="Red"/>
                </TabItem>
                <TabItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="20 0 10 0" Text="ID"/>
                        <TextBox Width="50" Text="{Binding UserID}"/>
                    </StackPanel>
                </TabItem>
                <TabItem>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="管理员"/>
                        <TextBlock Grid.Row="1" Text="姓名"/>
                        <TextBlock Grid.Row="2" Text="注册类型"/>
                        <TextBlock Grid.Row="3" Text="人脸重复录入"/>
                        <TextBlock Grid.Row="4" Text="超时时间(s)"/>
                        <CheckBox Grid.Column="1" Grid.Row="0" IsChecked="{Binding MsgEnrollData_Admin}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding MsgEnrollData_Name}"/>
                        <ComboBox Grid.Column="1" Grid.Row="2" SelectedIndex="{Binding RegisterType}">
                            <ComboBoxItem>单帧录入</ComboBoxItem>
                            <ComboBoxItem>交互录入</ComboBoxItem>
                        </ComboBox>
                        <CheckBox Grid.Column="1" Grid.Row="3" IsChecked="{Binding IsReRegister}"/>
                        <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding MsgEnrollData_Time}"/>
                    </Grid>
                </TabItem>
                <TabItem></TabItem>
            </TabControl>
            <Button Content="发 送" 
                    Width="100" 
                    VerticalAlignment="Bottom"
                    Command="{Binding SerialSendCommand}"></Button>
        </DockPanel>
        <view:ConsoleView Grid.Row="1" Grid.ColumnSpan="3"/>
    </Grid>
</Window>
